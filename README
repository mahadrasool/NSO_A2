Ansible playbook for deploying Flask app with HAproxy load balancing
This project contains an Ansible playbook that deploys a Flask app with HAproxy load balancing across three servers: devA, devB, and devC. The playbook assumes that the hosts have already been created and that the playbook is run from outside the site, but via the Bastion host.

Prerequisites
Before running the playbook, make sure you have the following:

Access to the Bastion host via SSH with an SSH key
SSH access from the Bastion host to all site-local hosts using SSH keys
Ansible installed on the host running the playbook
How to run the playbook
Clone this repository to your local machine
Update the hosts file with the appropriate IP addresses for the hosts in your environment
Update the ssh-config file with the appropriate SSH configuration for your environment
Run the playbook using the following command:
ansible-playbook --ssh-common-args "-F /path/to/ssh-config" -i hosts site.yaml
What the playbook does
The site.yaml playbook does the following:

Installs HAproxy on the HAproxy host
Deploys the Flask app on devA, devB, and devC hosts
Configures HAproxy to balance load across devA, devB, and devC
Runs a rudimentary function test of the deployed application by sending three requests to the public IP associated with HAproxy and verifying that all three hosts devA, devB, and devC answer
Additional notes
The Flask app used in this project is available at https://github.com/patrikarlos/NSO_A2
Use the application2.py file for this project
The hosts in this project use private addresses from the site-local network and do not have direct public access
The Bastion host acts as a secure access point for development and enables SSH access to all other hosts within the site-local network
Troubleshooting
If you encounter any issues while running the playbook, please refer to the Ansible documentation.
